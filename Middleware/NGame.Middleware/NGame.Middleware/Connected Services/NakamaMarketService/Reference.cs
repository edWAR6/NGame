//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NakamaMarketService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeaderResponse", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared")]
    public partial class HeaderResponse : object
    {
        
        private NakamaMarketService.ErrorResponse ErrorField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NakamaMarketService.ErrorResponse Error
        {
            get
            {
                return this.ErrorField;
            }
            set
            {
                this.ErrorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success
        {
            get
            {
                return this.SuccessField;
            }
            set
            {
                this.SuccessField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorResponse", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared")]
    public partial class ErrorResponse : object
    {
        
        private int ErrorCodeField;
        
        private string ErrorMessageField;
        
        private string MethodNameField;
        
        private string SourceField;
        
        private string StackTraceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage
        {
            get
            {
                return this.ErrorMessageField;
            }
            set
            {
                this.ErrorMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName
        {
            get
            {
                return this.MethodNameField;
            }
            set
            {
                this.MethodNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source
        {
            get
            {
                return this.SourceField;
            }
            set
            {
                this.SourceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace
        {
            get
            {
                return this.StackTraceField;
            }
            set
            {
                this.StackTraceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketGroupFilter", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketSportFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketCategoryFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketTournamentFilter))]
    public partial class MarketGroupFilter : object
    {
        
        private bool IsForAllAgentsAndPlayersField;
        
        private NakamaMarketService.MarketLimitFilter[] LimitsField;
        
        private int SystemPlataformIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsForAllAgentsAndPlayers
        {
            get
            {
                return this.IsForAllAgentsAndPlayersField;
            }
            set
            {
                this.IsForAllAgentsAndPlayersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NakamaMarketService.MarketLimitFilter[] Limits
        {
            get
            {
                return this.LimitsField;
            }
            set
            {
                this.LimitsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemPlataformID
        {
            get
            {
                return this.SystemPlataformIDField;
            }
            set
            {
                this.SystemPlataformIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketSportFilter", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketCategoryFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketTournamentFilter))]
    public partial class MarketSportFilter : NakamaMarketService.MarketGroupFilter
    {
        
        private int SportIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SportID
        {
            get
            {
                return this.SportIDField;
            }
            set
            {
                this.SportIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketCategoryFilter", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketTournamentFilter))]
    public partial class MarketCategoryFilter : NakamaMarketService.MarketSportFilter
    {
        
        private int CategoryIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID
        {
            get
            {
                return this.CategoryIDField;
            }
            set
            {
                this.CategoryIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketTournamentFilter", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Market")]
    public partial class MarketTournamentFilter : NakamaMarketService.MarketCategoryFilter
    {
        
        private int TournamentIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TournamentID
        {
            get
            {
                return this.TournamentIDField;
            }
            set
            {
                this.TournamentIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketLimitFilter", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Market")]
    public partial class MarketLimitFilter : object
    {
        
        private bool IsActiveField;
        
        private int MarketIDField;
        
        private System.Nullable<double> MaxBetField;
        
        private double MaxWinField;
        
        private int SegmentIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                this.IsActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MarketID
        {
            get
            {
                return this.MarketIDField;
            }
            set
            {
                this.MarketIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> MaxBet
        {
            get
            {
                return this.MaxBetField;
            }
            set
            {
                this.MaxBetField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxWin
        {
            get
            {
                return this.MaxWinField;
            }
            set
            {
                this.MaxWinField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SegmentID
        {
            get
            {
                return this.SegmentIDField;
            }
            set
            {
                this.SegmentIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketResponse", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.HeaderResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.ErrorResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketSportFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketLimitFilter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketLimitFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketCategoryFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketTournamentFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketSport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketLimit[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketLimit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketTournament))]
    public partial class MarketResponse : object
    {
        
        private NakamaMarketService.HeaderResponse HeaderField;
        
        private object ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NakamaMarketService.HeaderResponse Header
        {
            get
            {
                return this.HeaderField;
            }
            set
            {
                this.HeaderField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Result
        {
            get
            {
                return this.ResultField;
            }
            set
            {
                this.ResultField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketSport", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketTournament))]
    public partial class MarketSport : NakamaMarketService.MarketGroup
    {
        
        private int SportIDField;
        
        private string SportsNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SportID
        {
            get
            {
                return this.SportIDField;
            }
            set
            {
                this.SportIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SportsName
        {
            get
            {
                return this.SportsNameField;
            }
            set
            {
                this.SportsNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketGroup", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketSport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketTournament))]
    public partial class MarketGroup : object
    {
        
        private bool IsForAllPlayersField;
        
        private bool IsForAllSubAgentsField;
        
        private NakamaMarketService.MarketLimit[] LimitsField;
        
        private int SystemPlataformIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsForAllPlayers
        {
            get
            {
                return this.IsForAllPlayersField;
            }
            set
            {
                this.IsForAllPlayersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsForAllSubAgents
        {
            get
            {
                return this.IsForAllSubAgentsField;
            }
            set
            {
                this.IsForAllSubAgentsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NakamaMarketService.MarketLimit[] Limits
        {
            get
            {
                return this.LimitsField;
            }
            set
            {
                this.LimitsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemPlataformID
        {
            get
            {
                return this.SystemPlataformIDField;
            }
            set
            {
                this.SystemPlataformIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketLimit", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Market")]
    public partial class MarketLimit : object
    {
        
        private bool IsActiveField;
        
        private int MarketIDField;
        
        private string MarketNameField;
        
        private double MaxBetField;
        
        private double MaxWinField;
        
        private int SegmentIDField;
        
        private string SegmentNameField;
        
        private string SegmentShortNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                this.IsActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MarketID
        {
            get
            {
                return this.MarketIDField;
            }
            set
            {
                this.MarketIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarketName
        {
            get
            {
                return this.MarketNameField;
            }
            set
            {
                this.MarketNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxBet
        {
            get
            {
                return this.MaxBetField;
            }
            set
            {
                this.MaxBetField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxWin
        {
            get
            {
                return this.MaxWinField;
            }
            set
            {
                this.MaxWinField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SegmentID
        {
            get
            {
                return this.SegmentIDField;
            }
            set
            {
                this.SegmentIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegmentName
        {
            get
            {
                return this.SegmentNameField;
            }
            set
            {
                this.SegmentNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegmentShortName
        {
            get
            {
                return this.SegmentShortNameField;
            }
            set
            {
                this.SegmentShortNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketCategory", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaMarketService.MarketTournament))]
    public partial class MarketCategory : NakamaMarketService.MarketSport
    {
        
        private int CategoryIDField;
        
        private string CategoryNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID
        {
            get
            {
                return this.CategoryIDField;
            }
            set
            {
                this.CategoryIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName
        {
            get
            {
                return this.CategoryNameField;
            }
            set
            {
                this.CategoryNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketTournament", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Market")]
    public partial class MarketTournament : NakamaMarketService.MarketCategory
    {
        
        private int TournamentIDField;
        
        private string TournamentNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TournamentID
        {
            get
            {
                return this.TournamentIDField;
            }
            set
            {
                this.TournamentIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TournamentName
        {
            get
            {
                return this.TournamentNameField;
            }
            set
            {
                this.TournamentNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NakamaMarketService.IMarketWebService")]
    public interface IMarketWebService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketWebService/GetSportMarket", ReplyAction="http://tempuri.org/IMarketWebService/GetSportMarketResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketTournament))]
        System.Threading.Tasks.Task<NakamaMarketService.MarketResponse> GetSportMarketAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketWebService/GetCategoryMarket", ReplyAction="http://tempuri.org/IMarketWebService/GetCategoryMarketResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketTournament))]
        System.Threading.Tasks.Task<NakamaMarketService.MarketResponse> GetCategoryMarketAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketWebService/GetTournamentMarket", ReplyAction="http://tempuri.org/IMarketWebService/GetTournamentMarketResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketTournament))]
        System.Threading.Tasks.Task<NakamaMarketService.MarketResponse> GetTournamentMarketAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketWebService/SetSportMarket", ReplyAction="http://tempuri.org/IMarketWebService/SetSportMarketResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketTournament))]
        System.Threading.Tasks.Task<NakamaMarketService.MarketResponse> SetSportMarketAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketWebService/SetCategoryMarket", ReplyAction="http://tempuri.org/IMarketWebService/SetCategoryMarketResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketTournament))]
        System.Threading.Tasks.Task<NakamaMarketService.MarketResponse> SetCategoryMarketAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarketWebService/SetTournamentMarket", ReplyAction="http://tempuri.org/IMarketWebService/SetTournamentMarketResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaMarketService.MarketTournament))]
        System.Threading.Tasks.Task<NakamaMarketService.MarketResponse> SetTournamentMarketAsync(object filter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public interface IMarketWebServiceChannel : NakamaMarketService.IMarketWebService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public partial class MarketWebServiceClient : System.ServiceModel.ClientBase<NakamaMarketService.IMarketWebService>, NakamaMarketService.IMarketWebService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MarketWebServiceClient() : 
                base(MarketWebServiceClient.GetDefaultBinding(), MarketWebServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IMarketWebService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MarketWebServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(MarketWebServiceClient.GetBindingForEndpoint(endpointConfiguration), MarketWebServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MarketWebServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MarketWebServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MarketWebServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MarketWebServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MarketWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<NakamaMarketService.MarketResponse> GetSportMarketAsync(object filter)
        {
            return base.Channel.GetSportMarketAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaMarketService.MarketResponse> GetCategoryMarketAsync(object filter)
        {
            return base.Channel.GetCategoryMarketAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaMarketService.MarketResponse> GetTournamentMarketAsync(object filter)
        {
            return base.Channel.GetTournamentMarketAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaMarketService.MarketResponse> SetSportMarketAsync(object filter)
        {
            return base.Channel.SetSportMarketAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaMarketService.MarketResponse> SetCategoryMarketAsync(object filter)
        {
            return base.Channel.SetCategoryMarketAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaMarketService.MarketResponse> SetTournamentMarketAsync(object filter)
        {
            return base.Channel.SetTournamentMarketAsync(filter);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMarketWebService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMarketWebService))
            {
                return new System.ServiceModel.EndpointAddress("http://nakama-webservice.ganaobrava.net/MarketWebService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return MarketWebServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IMarketWebService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return MarketWebServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IMarketWebService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IMarketWebService,
        }
    }
}
