//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NakamaPlayerService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketGroup", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
    public partial class MarketGroup : object
    {
        
        private int AgentSystemIDField;
        
        private bool IsForAllPlayersField;
        
        private bool IsForAllSubAgentsField;
        
        private NakamaPlayerService.MarketLimit[] LimitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgentSystemID
        {
            get
            {
                return this.AgentSystemIDField;
            }
            set
            {
                this.AgentSystemIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsForAllPlayers
        {
            get
            {
                return this.IsForAllPlayersField;
            }
            set
            {
                this.IsForAllPlayersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsForAllSubAgents
        {
            get
            {
                return this.IsForAllSubAgentsField;
            }
            set
            {
                this.IsForAllSubAgentsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NakamaPlayerService.MarketLimit[] Limits
        {
            get
            {
                return this.LimitsField;
            }
            set
            {
                this.LimitsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketSport", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
    public partial class MarketSport : NakamaPlayerService.MarketGroup
    {
        
        private int SportIDField;
        
        private string SportsNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SportID
        {
            get
            {
                return this.SportIDField;
            }
            set
            {
                this.SportIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SportsName
        {
            get
            {
                return this.SportsNameField;
            }
            set
            {
                this.SportsNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketCategory", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
    public partial class MarketCategory : NakamaPlayerService.MarketSport
    {
        
        private int CategoryIDField;
        
        private string CategoryNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID
        {
            get
            {
                return this.CategoryIDField;
            }
            set
            {
                this.CategoryIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName
        {
            get
            {
                return this.CategoryNameField;
            }
            set
            {
                this.CategoryNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketTournament", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
    public partial class MarketTournament : NakamaPlayerService.MarketCategory
    {
        
        private int TournamentIDField;
        
        private string TournamentNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TournamentID
        {
            get
            {
                return this.TournamentIDField;
            }
            set
            {
                this.TournamentIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TournamentName
        {
            get
            {
                return this.TournamentNameField;
            }
            set
            {
                this.TournamentNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerMarketTournamentGroup", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Market.Limits.Players")]
    public partial class PlayerMarketTournamentGroup : NakamaPlayerService.MarketTournament
    {
        
        private int PlayerIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerID
        {
            get
            {
                return this.PlayerIDField;
            }
            set
            {
                this.PlayerIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerMarketCategoryGroup", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Market.Limits.Players")]
    public partial class PlayerMarketCategoryGroup : NakamaPlayerService.MarketCategory
    {
        
        private int PlayerIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerID
        {
            get
            {
                return this.PlayerIDField;
            }
            set
            {
                this.PlayerIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerMarketSportGroup", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Market.Limits.Players")]
    public partial class PlayerMarketSportGroup : NakamaPlayerService.MarketSport
    {
        
        private int PlayerIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerID
        {
            get
            {
                return this.PlayerIDField;
            }
            set
            {
                this.PlayerIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketLimit", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Market")]
    public partial class MarketLimit : object
    {
        
        private bool IsActiveField;
        
        private int MarketIDField;
        
        private string MarketNameField;
        
        private double MaxBetField;
        
        private double MaxWinField;
        
        private int SegmentIDField;
        
        private string SegmentNameField;
        
        private string SegmentShortNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                this.IsActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MarketID
        {
            get
            {
                return this.MarketIDField;
            }
            set
            {
                this.MarketIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarketName
        {
            get
            {
                return this.MarketNameField;
            }
            set
            {
                this.MarketNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxBet
        {
            get
            {
                return this.MaxBetField;
            }
            set
            {
                this.MaxBetField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxWin
        {
            get
            {
                return this.MaxWinField;
            }
            set
            {
                this.MaxWinField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SegmentID
        {
            get
            {
                return this.SegmentIDField;
            }
            set
            {
                this.SegmentIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegmentName
        {
            get
            {
                return this.SegmentNameField;
            }
            set
            {
                this.SegmentNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegmentShortName
        {
            get
            {
                return this.SegmentShortNameField;
            }
            set
            {
                this.SegmentShortNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketGroupFilter", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
    public partial class MarketGroupFilter : object
    {
        
        private int AgentSystemIDField;
        
        private bool IsForAllAgentsAndPlayersField;
        
        private NakamaPlayerService.MarketLimitFilter[] LimitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgentSystemID
        {
            get
            {
                return this.AgentSystemIDField;
            }
            set
            {
                this.AgentSystemIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsForAllAgentsAndPlayers
        {
            get
            {
                return this.IsForAllAgentsAndPlayersField;
            }
            set
            {
                this.IsForAllAgentsAndPlayersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NakamaPlayerService.MarketLimitFilter[] Limits
        {
            get
            {
                return this.LimitsField;
            }
            set
            {
                this.LimitsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketSportFilter", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
    public partial class MarketSportFilter : NakamaPlayerService.MarketGroupFilter
    {
        
        private int SportIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SportID
        {
            get
            {
                return this.SportIDField;
            }
            set
            {
                this.SportIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketCategoryFilter", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
    public partial class MarketCategoryFilter : NakamaPlayerService.MarketSportFilter
    {
        
        private int CategoryIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID
        {
            get
            {
                return this.CategoryIDField;
            }
            set
            {
                this.CategoryIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketTournamentFilter", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
    public partial class MarketTournamentFilter : NakamaPlayerService.MarketCategoryFilter
    {
        
        private int TournamentIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TournamentID
        {
            get
            {
                return this.TournamentIDField;
            }
            set
            {
                this.TournamentIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerMarketTournamentGroupFilter", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Market.Limits.Pla" +
        "yers")]
    public partial class PlayerMarketTournamentGroupFilter : NakamaPlayerService.MarketTournamentFilter
    {
        
        private int PlayerIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerID
        {
            get
            {
                return this.PlayerIDField;
            }
            set
            {
                this.PlayerIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerMarketCategoryGroupFilter", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Market.Limits.Pla" +
        "yers")]
    public partial class PlayerMarketCategoryGroupFilter : NakamaPlayerService.MarketCategoryFilter
    {
        
        private int PlayerIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerID
        {
            get
            {
                return this.PlayerIDField;
            }
            set
            {
                this.PlayerIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerMarketSportGroupFilter", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Market.Limits.Pla" +
        "yers")]
    public partial class PlayerMarketSportGroupFilter : NakamaPlayerService.MarketSportFilter
    {
        
        private int PlayerIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerID
        {
            get
            {
                return this.PlayerIDField;
            }
            set
            {
                this.PlayerIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketLimitFilter", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Market")]
    public partial class MarketLimitFilter : object
    {
        
        private bool IsActiveField;
        
        private int MarketIDField;
        
        private System.Nullable<double> MaxBetField;
        
        private double MaxWinField;
        
        private int SegmentIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                this.IsActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MarketID
        {
            get
            {
                return this.MarketIDField;
            }
            set
            {
                this.MarketIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> MaxBet
        {
            get
            {
                return this.MaxBetField;
            }
            set
            {
                this.MaxBetField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxWin
        {
            get
            {
                return this.MaxWinField;
            }
            set
            {
                this.MaxWinField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SegmentID
        {
            get
            {
                return this.SegmentIDField;
            }
            set
            {
                this.SegmentIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketResponse", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Market")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.HeaderResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.ErrorResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Array))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayersListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.Player))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerDetail))]
    public partial class MarketResponse : object
    {
        
        private NakamaPlayerService.HeaderResponse HeaderField;
        
        private object ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NakamaPlayerService.HeaderResponse Header
        {
            get
            {
                return this.HeaderField;
            }
            set
            {
                this.HeaderField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Result
        {
            get
            {
                return this.ResultField;
            }
            set
            {
                this.ResultField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeaderResponse", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared")]
    public partial class HeaderResponse : object
    {
        
        private NakamaPlayerService.ErrorResponse ErrorField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NakamaPlayerService.ErrorResponse Error
        {
            get
            {
                return this.ErrorField;
            }
            set
            {
                this.ErrorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success
        {
            get
            {
                return this.SuccessField;
            }
            set
            {
                this.SuccessField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorResponse", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared")]
    public partial class ErrorResponse : object
    {
        
        private int ErrorCodeField;
        
        private string ErrorMessageField;
        
        private string MethodNameField;
        
        private string SourceField;
        
        private string StackTraceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage
        {
            get
            {
                return this.ErrorMessageField;
            }
            set
            {
                this.ErrorMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName
        {
            get
            {
                return this.MethodNameField;
            }
            set
            {
                this.MethodNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source
        {
            get
            {
                return this.SourceField;
            }
            set
            {
                this.SourceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace
        {
            get
            {
                return this.StackTraceField;
            }
            set
            {
                this.StackTraceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerFilter", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Player")]
    public partial class PlayerFilter : object
    {
        
        private string AgentIDField;
        
        private int AgentSystemIDField;
        
        private string HostPlayerIDField;
        
        private string PlayerAccountNumberField;
        
        private int PlayerIDField;
        
        private NakamaPlayerService.PlayerSettingFilter[] PlayerSettingsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentID
        {
            get
            {
                return this.AgentIDField;
            }
            set
            {
                this.AgentIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgentSystemID
        {
            get
            {
                return this.AgentSystemIDField;
            }
            set
            {
                this.AgentSystemIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostPlayerID
        {
            get
            {
                return this.HostPlayerIDField;
            }
            set
            {
                this.HostPlayerIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayerAccountNumber
        {
            get
            {
                return this.PlayerAccountNumberField;
            }
            set
            {
                this.PlayerAccountNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerID
        {
            get
            {
                return this.PlayerIDField;
            }
            set
            {
                this.PlayerIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NakamaPlayerService.PlayerSettingFilter[] PlayerSettings
        {
            get
            {
                return this.PlayerSettingsField;
            }
            set
            {
                this.PlayerSettingsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerSettingFilter", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Player")]
    public partial class PlayerSettingFilter : object
    {
        
        private string PlayerSettingValueField;
        
        private int PropertyIDField;
        
        private string PropertyNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayerSettingValue
        {
            get
            {
                return this.PlayerSettingValueField;
            }
            set
            {
                this.PlayerSettingValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PropertyID
        {
            get
            {
                return this.PropertyIDField;
            }
            set
            {
                this.PropertyIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName
        {
            get
            {
                return this.PropertyNameField;
            }
            set
            {
                this.PropertyNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayersListResponse", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Player")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.HeaderResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.ErrorResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Array))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.Player))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerDetail))]
    public partial class PlayersListResponse : object
    {
        
        private NakamaPlayerService.HeaderResponse HeaderField;
        
        private System.Array ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NakamaPlayerService.HeaderResponse Header
        {
            get
            {
                return this.HeaderField;
            }
            set
            {
                this.HeaderField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Array Result
        {
            get
            {
                return this.ResultField;
            }
            set
            {
                this.ResultField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerResponse", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Extension.Shared.Player")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.MarketResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.HeaderResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.ErrorResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Array))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayersListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.Player))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NakamaPlayerService.PlayerDetail))]
    public partial class PlayerResponse : object
    {
        
        private NakamaPlayerService.HeaderResponse HeaderField;
        
        private object ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NakamaPlayerService.HeaderResponse Header
        {
            get
            {
                return this.HeaderField;
            }
            set
            {
                this.HeaderField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Result
        {
            get
            {
                return this.ResultField;
            }
            set
            {
                this.ResultField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Player")]
    public partial class Player : object
    {
        
        private string AgentIDField;
        
        private string HostPlayerIDField;
        
        private string PlayerAccountNumberField;
        
        private int PlayerIDField;
        
        private NakamaPlayerService.PlayerSetting[] PlayerSettingsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentID
        {
            get
            {
                return this.AgentIDField;
            }
            set
            {
                this.AgentIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostPlayerID
        {
            get
            {
                return this.HostPlayerIDField;
            }
            set
            {
                this.HostPlayerIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayerAccountNumber
        {
            get
            {
                return this.PlayerAccountNumberField;
            }
            set
            {
                this.PlayerAccountNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerID
        {
            get
            {
                return this.PlayerIDField;
            }
            set
            {
                this.PlayerIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NakamaPlayerService.PlayerSetting[] PlayerSettings
        {
            get
            {
                return this.PlayerSettingsField;
            }
            set
            {
                this.PlayerSettingsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerSetting", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Player")]
    public partial class PlayerSetting : object
    {
        
        private int PlayerSettingIDField;
        
        private string PlayerSettingValueField;
        
        private int PropertyIDField;
        
        private string PropertyNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerSettingID
        {
            get
            {
                return this.PlayerSettingIDField;
            }
            set
            {
                this.PlayerSettingIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayerSettingValue
        {
            get
            {
                return this.PlayerSettingValueField;
            }
            set
            {
                this.PlayerSettingValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PropertyID
        {
            get
            {
                return this.PropertyIDField;
            }
            set
            {
                this.PropertyIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName
        {
            get
            {
                return this.PropertyNameField;
            }
            set
            {
                this.PropertyNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerDetail", Namespace="http://schemas.datacontract.org/2004/07/Nakama.Core.Model.Player")]
    public partial class PlayerDetail : object
    {
        
        private string AgentIDField;
        
        private System.Nullable<decimal> AverageBetField;
        
        private string HostPlayerIDField;
        
        private System.Nullable<System.DateTime> LastBetField;
        
        private int PlayerIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentID
        {
            get
            {
                return this.AgentIDField;
            }
            set
            {
                this.AgentIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AverageBet
        {
            get
            {
                return this.AverageBetField;
            }
            set
            {
                this.AverageBetField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostPlayerID
        {
            get
            {
                return this.HostPlayerIDField;
            }
            set
            {
                this.HostPlayerIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastBet
        {
            get
            {
                return this.LastBetField;
            }
            set
            {
                this.LastBetField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerID
        {
            get
            {
                return this.PlayerIDField;
            }
            set
            {
                this.PlayerIDField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NakamaPlayerService.IPlayerWebService")]
    public interface IPlayerWebService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerWebService/GetPlayersByAgentID", ReplyAction="http://tempuri.org/IPlayerWebService/GetPlayersByAgentIDResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Array))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayersListResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerDetail))]
        System.Threading.Tasks.Task<NakamaPlayerService.PlayersListResponse> GetPlayersByAgentIDAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerWebService/GetPlayerSettingByPlayerID", ReplyAction="http://tempuri.org/IPlayerWebService/GetPlayerSettingByPlayerIDResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Array))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayersListResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerDetail))]
        System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> GetPlayerSettingByPlayerIDAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerWebService/GetPlayerSettingByHostPlayerID", ReplyAction="http://tempuri.org/IPlayerWebService/GetPlayerSettingByHostPlayerIDResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Array))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayersListResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerDetail))]
        System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> GetPlayerSettingByHostPlayerIDAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerWebService/SetPlayerSportMarket", ReplyAction="http://tempuri.org/IPlayerWebService/SetPlayerSportMarketResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Array))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayersListResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerDetail))]
        System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> SetPlayerSportMarketAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerWebService/SetPlayerCategoryMarket", ReplyAction="http://tempuri.org/IPlayerWebService/SetPlayerCategoryMarketResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Array))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayersListResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerDetail))]
        System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> SetPlayerCategoryMarketAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerWebService/SetPlayerTournamentMarket", ReplyAction="http://tempuri.org/IPlayerWebService/SetPlayerTournamentMarketResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Array))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayersListResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerDetail))]
        System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> SetPlayerTournamentMarketAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerWebService/SetPlayerSetting", ReplyAction="http://tempuri.org/IPlayerWebService/SetPlayerSettingResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Array))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayersListResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerDetail))]
        System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> SetPlayerSettingAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerWebService/GetPlayerByPlayerID", ReplyAction="http://tempuri.org/IPlayerWebService/GetPlayerByPlayerIDResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Array))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayersListResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerDetail))]
        System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> GetPlayerByPlayerIDAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerWebService/GetPlayerByHostPlayerID", ReplyAction="http://tempuri.org/IPlayerWebService/GetPlayerByHostPlayerIDResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Array))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayersListResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerDetail))]
        System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> GetPlayerByHostPlayerIDAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerWebService/GetPlayerSportMarket", ReplyAction="http://tempuri.org/IPlayerWebService/GetPlayerSportMarketResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Array))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayersListResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerDetail))]
        System.Threading.Tasks.Task<NakamaPlayerService.MarketResponse> GetPlayerSportMarketAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerWebService/GetPlayerTournamentMarket", ReplyAction="http://tempuri.org/IPlayerWebService/GetPlayerTournamentMarketResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Array))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayersListResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerDetail))]
        System.Threading.Tasks.Task<NakamaPlayerService.MarketResponse> GetPlayerTournamentMarketAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerWebService/GetPlayerCategoryMarket", ReplyAction="http://tempuri.org/IPlayerWebService/GetPlayerCategoryMarketResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournament))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketSportFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketLimitFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketCategoryFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketTournamentFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.MarketResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.HeaderResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.ErrorResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketSportGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketCategoryGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerMarketTournamentGroupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Array))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSettingFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayersListResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.Player))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerSetting))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(NakamaPlayerService.PlayerDetail))]
        System.Threading.Tasks.Task<NakamaPlayerService.MarketResponse> GetPlayerCategoryMarketAsync(object filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerWebService/GetToken", ReplyAction="http://tempuri.org/IPlayerWebService/GetTokenResponse")]
        System.Threading.Tasks.Task<string> GetTokenAsync(string userName, string password, int agentSystemID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public interface IPlayerWebServiceChannel : NakamaPlayerService.IPlayerWebService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public partial class PlayerWebServiceClient : System.ServiceModel.ClientBase<NakamaPlayerService.IPlayerWebService>, NakamaPlayerService.IPlayerWebService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PlayerWebServiceClient() : 
                base(PlayerWebServiceClient.GetDefaultBinding(), PlayerWebServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IPlayerWebService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PlayerWebServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(PlayerWebServiceClient.GetBindingForEndpoint(endpointConfiguration), PlayerWebServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PlayerWebServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PlayerWebServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PlayerWebServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PlayerWebServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PlayerWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<NakamaPlayerService.PlayersListResponse> GetPlayersByAgentIDAsync(object filter)
        {
            return base.Channel.GetPlayersByAgentIDAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> GetPlayerSettingByPlayerIDAsync(object filter)
        {
            return base.Channel.GetPlayerSettingByPlayerIDAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> GetPlayerSettingByHostPlayerIDAsync(object filter)
        {
            return base.Channel.GetPlayerSettingByHostPlayerIDAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> SetPlayerSportMarketAsync(object filter)
        {
            return base.Channel.SetPlayerSportMarketAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> SetPlayerCategoryMarketAsync(object filter)
        {
            return base.Channel.SetPlayerCategoryMarketAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> SetPlayerTournamentMarketAsync(object filter)
        {
            return base.Channel.SetPlayerTournamentMarketAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> SetPlayerSettingAsync(object filter)
        {
            return base.Channel.SetPlayerSettingAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> GetPlayerByPlayerIDAsync(object filter)
        {
            return base.Channel.GetPlayerByPlayerIDAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaPlayerService.PlayerResponse> GetPlayerByHostPlayerIDAsync(object filter)
        {
            return base.Channel.GetPlayerByHostPlayerIDAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaPlayerService.MarketResponse> GetPlayerSportMarketAsync(object filter)
        {
            return base.Channel.GetPlayerSportMarketAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaPlayerService.MarketResponse> GetPlayerTournamentMarketAsync(object filter)
        {
            return base.Channel.GetPlayerTournamentMarketAsync(filter);
        }
        
        public System.Threading.Tasks.Task<NakamaPlayerService.MarketResponse> GetPlayerCategoryMarketAsync(object filter)
        {
            return base.Channel.GetPlayerCategoryMarketAsync(filter);
        }
        
        public System.Threading.Tasks.Task<string> GetTokenAsync(string userName, string password, int agentSystemID)
        {
            return base.Channel.GetTokenAsync(userName, password, agentSystemID);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPlayerWebService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPlayerWebService))
            {
                return new System.ServiceModel.EndpointAddress("http://nakama-webservice.ganaobrava.net/PlayerWebService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return PlayerWebServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IPlayerWebService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return PlayerWebServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IPlayerWebService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IPlayerWebService,
        }
    }
}
